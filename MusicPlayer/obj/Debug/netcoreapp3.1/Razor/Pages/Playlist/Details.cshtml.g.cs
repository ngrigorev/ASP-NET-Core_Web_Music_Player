#pragma checksum "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "db7d992f9f7c2b2eabf1a0cea325db1e0fc5add7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(MusicPlayer.Pages.Playlist.Pages_Playlist_Details), @"mvc.1.0.razor-page", @"/Pages/Playlist/Details.cshtml")]
namespace MusicPlayer.Pages.Playlist
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\_ViewImports.cshtml"
using MusicPlayer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\_ViewImports.cshtml"
using MusicPlayer.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"db7d992f9f7c2b2eabf1a0cea325db1e0fc5add7", @"/Pages/Playlist/Details.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"231d691469318d7cbea94b501ab2664d9779204d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Playlist_Details : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "./Edit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "./Delete", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "./Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""fullMaster"">
    <div style=""height: 100%;"">
        <div class=""background"">
            <div class=""backgroundGradient__buffer bg-light""></div>
        </div>
    </div>
    <div class=""fullMaster__foreground"">
        <div class=""fullMaster__artwork"">
            <div class=""image m-sound image__lightOutline readOnly customImage interactive sc-artwork sc-artwork-placeholder-10 m-loaded"" tabindex=""0"" style=""height: 100%; width: 100%;"">
                <span style=""background-image: url(https://fanart.tv/fanart/music/c99c4be3-b183-4226-925c-b9b7ea2b0dd3/albumcover/the-witcher-original-soundtrack-52ee88f190a38.jpg); width: 100%; height: 100%; opacity: 1;"" class=""sc-artwork sc-artwork-placeholder-10  image__full g-opacity-transition"" aria-label=""Woah"" aria-role=""img""></span>
            </div>
        </div>
        <div class=""fullMaster__title"">
            <div class=""soundTitle__playButton"">
                <button class=""btn btn-success btn-block"" id=""playPause"" style=""height: ");
            WriteLiteral(@"75px; width: 60px;"">
                    <span id=""play"">
                        <span style=""font-size: 1.7em;"">
                            <i class=""fas fa-play""></i>
                        </span>
                        Play
                    </span>
                    <span id=""pause"" style=""display: none"">
                        <span style=""font-size: 1.7em;"">
                            <i class=""fas fa-pause""></i>
                        </span>
                        Pause
                    </span>
                </button>
            </div>
            <div class=""soundTitle__nameContainer"">
                <div class=""soundTitle__creator"" id=""author"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "db7d992f9f7c2b2eabf1a0cea325db1e0fc5add76043", async() => {
                WriteLiteral("Edit");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#nullable restore
#line 35 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
                                           WriteLiteral(Model.Playlist.Id);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(" |\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "db7d992f9f7c2b2eabf1a0cea325db1e0fc5add78227", async() => {
                WriteLiteral("Delete");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#nullable restore
#line 36 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
                                             WriteLiteral(Model.Playlist.Id);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(" |\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "db7d992f9f7c2b2eabf1a0cea325db1e0fc5add710415", async() => {
                WriteLiteral("Back to List");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </div>\r\n                <div class=\"soundTitle__title\" id=\"name\">\r\n                    Playlist: ");
#nullable restore
#line 40 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
                         Write(Html.DisplayFor(model => model.Playlist.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                </div>
            </div>
        </div>
        <div class=""fullMaster__info"">
            <span style=""font-size: 1.8rem;"">
                <a role=""button"" onclick=""wavesurfer.toggleMute()"" style=""cursor: pointer;"">
                    <i class=""fas fa-volume-mute""></i>
                </a>
                <input id=""volume"" type=""range"" min=""0"" max=""1"" value=""1"" step=""0.05"">
            </span>
        </div>
        <div class=""fullMaster__playerArea"">
            <div class=""fullMaster__waveform"">
                <div class=""waveformWrapper"">
                    <div id=""waveform"">
                        <div class=""timeIdicators"" id=""current"" style=""z-index: 4;"">0:00</div>
                        <div class=""timeIdicators"" id=""duration"" style=""z-index: 4;"">0:00</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div style=""padding-bottom: 1rem; padding-top: 1rem"">
    <button type=""button"" class=""btn b");
            WriteLiteral(@"tn-success"" id=""previous"">
        <i class=""fas fa-backward""></i> Previous
    </button>
    <button type=""button"" class=""btn btn-success"" id=""next"">
        Next <i class=""fas fa-forward""></i>
    </button>
</div>

<div id=""playlist"">
    <div class=""list-group"" id=""playlist"">
");
#nullable restore
#line 76 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
         foreach (var item in Model.Playlist.MusicPlaylist)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <a");
            BeginWriteAttribute("href", " href=\"", 3564, "\"", 3626, 2);
            WriteAttributeValue("", 3571, "../audio/", 3571, 9, true);
#nullable restore
#line 78 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
WriteAttributeValue("", 3580, Html.DisplayFor(modelItem => item.Music.File), 3580, 46, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"list-group-item list-group-item-action\" id=\"song\">\r\n                <i class=\"fas fa-play\" style=\"padding-right: 10px\"></i>\r\n                <span style=\"font-weight: 500\">");
#nullable restore
#line 80 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
                                          Write(Html.DisplayFor(modelItem => item.Music.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                <span style=\"padding-left: 20px\">by ");
#nullable restore
#line 81 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
                                               Write(Html.DisplayFor(modelItem => item.Music.Author));

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n            </a>\r\n");
#nullable restore
#line 83 "E:\dev\git\ASP-NET-Core_Web_Music_Player\MusicPlayer\Pages\Playlist\Details.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </div>
</div>

<script>
    // Create a WaveSurfer instance
    var wavesurfer;

    // Init on DOM ready
    document.addEventListener('DOMContentLoaded', function () {
        wavesurfer = WaveSurfer.create({
            container: '#waveform',
            waveColor: 'grey',
            progressColor: '#14ad0c',
            height: 120,
            barWidth: 2,
            cursorWidth: 0,
            responsive: true
        });

        wavesurfer.setVolume(0.4);
        document.querySelector('#volume').value = 0.4;
    });

    // Bind controls
    document.addEventListener('DOMContentLoaded', function () {
        var playPause = document.querySelector('#playPause');
        playPause.addEventListener('click', function () {
            wavesurfer.playPause();
        });

        // Toggle play/pause text
        wavesurfer.on('play', function () {
            document.querySelector('#play').style.display = 'none';
            document.querySelector('#pause').style.d");
            WriteLiteral(@"isplay = '';
        });
        wavesurfer.on('pause', function () {
            document.querySelector('#play').style.display = '';
            document.querySelector('#pause').style.display = 'none';
        });

        // The playlist links
        var links = document.querySelectorAll('#playlist a');
        var currentTrack = 0;

        // Load a track by index and highlight the corresponding link
        var setCurrentSong = function (index) {
            links[currentTrack].classList.remove('active');
            currentTrack = index;
            links[currentTrack].classList.add('active');
            wavesurfer.load(links[currentTrack].href);
        };

        // To load the previous track from the button
        document.getElementById(""next"").addEventListener(""click"", function () {
            setCurrentSong((currentTrack + 1) % document.querySelectorAll('#song').length);
        });

        // To load the next track from the button
        document.getElementById(""pr");
            WriteLiteral(@"evious"").addEventListener(""click"", function () {
            // To make sure that if the user hit previous on the first song it won't bug
            if (currentTrack - 1 < 0) {
                i = document.querySelectorAll('#song').length - 1
            } else {
                i = currentTrack - 1
            }
            setCurrentSong(i);
        });

        // Load the track on click
        Array.prototype.forEach.call(links, function (link, index) {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                setCurrentSong(index);
            });
        });

        // Play on audio load
        wavesurfer.on('ready', function () {
            wavesurfer.play();
        });

        wavesurfer.on('error', function (e) {
            console.warn(e);
        });

        // Go to the next track on finish
        wavesurfer.on('finish', function () {
            setCurrentSong((currentTrack + 1) % links.length);
        })");
            WriteLiteral(@";

        // Load the first track
        setCurrentSong(currentTrack);

        // Volume controle
        var volumeInput = document.querySelector('#volume');
        var onChangeVolume = function (e) {
            wavesurfer.setVolume(e.target.value);
            console.log(e.target.value);
        };

        volumeInput.addEventListener('input', onChangeVolume);
        volumeInput.addEventListener('change', onChangeVolume);

        // Take a float value of time return to the 'm:ss' format
        var formatTime = function (timeValue) {
            return Math.trunc(timeValue / 60) + ':' + ('0' + Math.trunc(timeValue % 60)).slice(-2)
        }

        // Update current sound duration
        wavesurfer.on('ready', function () {
            document.getElementById(""duration"").innerHTML = formatTime(wavesurfer.getDuration())
        });

        // Update current sound cursor
        wavesurfer.on('audioprocess', function () {
            document.getElementById(""current"").in");
            WriteLiteral("nerHTML = formatTime(wavesurfer.getCurrentTime())\r\n        });\r\n    });\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MusicPlayer.DetailsPlaylist> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<MusicPlayer.DetailsPlaylist> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<MusicPlayer.DetailsPlaylist>)PageContext?.ViewData;
        public MusicPlayer.DetailsPlaylist Model => ViewData.Model;
    }
}
#pragma warning restore 1591
